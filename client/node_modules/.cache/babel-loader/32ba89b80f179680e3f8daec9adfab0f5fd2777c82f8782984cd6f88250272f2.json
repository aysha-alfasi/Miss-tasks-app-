{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfas\\\\miss-tasks-app\\\\client\\\\src\\\\components\\\\TheForm.js\";\nimport { Container, Row, Col, Button, Form, Alert } from \"react-bootstrap\";\nimport \"animate.css\";\nimport TrackVisibility from \"react-on-screen\";\nimport \"./TheForm.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TheForm = ({\n  handleSubmit,\n  loading,\n  showWarning,\n  input,\n  setInput\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          sm: 8,\n          md: 6,\n          lg: 4,\n          children: [showWarning && /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: ({\n              isVisible\n            }) => /*#__PURE__*/_jsxDEV(Alert, {\n              className: `danger ${isVisible ? \"animate__animated animate__fadeInUp\" : \"\"}`,\n              children: \"I'm all ears but you can't send an empty message\\uD83E\\uDD2D.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TrackVisibility, {\n            children: ({\n              isVisible\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formInput\",\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 3,\n                  value: input,\n                  onChange: e => setInput(e.target.value),\n                  placeholder: \"Share your thoughts...\",\n                  className: \"mb-3 textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-primary\",\n                type: \"submit\",\n                block: \"true\",\n                children: loading ? \"Analyzing...\" : \"Send to Miss Tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = TheForm;\nexport default TheForm;\nvar _c;\n$RefreshReg$(_c, \"TheForm\");","map":{"version":3,"names":["Container","Row","Col","Button","Form","Alert","TrackVisibility","jsxDEV","_jsxDEV","Fragment","_Fragment","TheForm","handleSubmit","loading","showWarning","input","setInput","children","className","xs","sm","md","lg","isVisible","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Control","as","rows","value","onChange","e","target","placeholder","type","block","_c","$RefreshReg$"],"sources":["C:/Users/alfas/miss-tasks-app/client/src/components/TheForm.js"],"sourcesContent":["import { Container, Row, Col, Button, Form, Alert } from \"react-bootstrap\";\r\nimport \"animate.css\";\r\nimport TrackVisibility from \"react-on-screen\";\r\nimport \"./TheForm.css\";\r\n\r\nconst TheForm = ({ handleSubmit, loading, showWarning, input, setInput }) => {\r\n  return (\r\n    <>\r\n      <Container className=\"my-5 container\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={12} sm={8} md={6} lg={4}>\r\n            {showWarning && (\r\n              <TrackVisibility>\r\n                {({ isVisible }) => (\r\n                  <Alert\r\n                    className={`danger ${\r\n                      isVisible ? \"animate__animated animate__fadeInUp\" : \"\"\r\n                    }`}\r\n                  >\r\n                    I'm all ears but you can't send an empty messageðŸ¤­.\r\n                  </Alert>\r\n                )}\r\n              </TrackVisibility>\r\n            )}\r\n\r\n            <TrackVisibility>\r\n              {({ isVisible }) => (\r\n                <Form onSubmit={handleSubmit} className=\"text-center\">\r\n                  <Form.Group controlId=\"formInput\">\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      rows={3}\r\n                      value={input}\r\n                      onChange={(e) => setInput(e.target.value)}\r\n                      placeholder=\"Share your thoughts...\"\r\n                      className=\"mb-3 textarea\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Button className=\"btn-primary\" type=\"submit\" block=\"true\">\r\n                    {loading ? \"Analyzing...\" : \"Send to Miss Tasks\"}\r\n                  </Button>\r\n                </Form>\r\n              )}\r\n            </TrackVisibility>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default TheForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}