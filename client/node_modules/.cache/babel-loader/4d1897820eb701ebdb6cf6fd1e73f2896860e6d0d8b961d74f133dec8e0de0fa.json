{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfas\\\\miss-tasks-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport TheForm from \"./components/TheForm\";\nimport Modal from \"./components/modal/Modal\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    analyzeSentiment(input); // <♡ The sentiment analysis function\n    setLoading(true);\n    if (input.trim() === \"\") {\n      setShowWarning(true);\n    } else {\n      setModalOpen(true);\n      setInput(\"\");\n      setShowWarning(false);\n    }\n  };\n  const closeModal = () => {\n    setInput(\"\");\n    setModalOpen(false);\n  };\n\n  /* <♡ API response /> */\n  const analyzeSentiment = async text => {\n    try {\n      const response = await fetch(\"/analyze-sentiment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text\n        }) // <♡ Send user input as JSON\n      });\n      const data = await response.json(); // <♡ Parse the JSON response\n      // <♡ Handle the sentiment response from the backend />\n      setResponse(data.message);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setResponse(\"There was an error analyzing your sentiment.\");\n    } finally {\n      setLoading(false); // <♡ Stop loading after the response\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullPageContent\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TheForm, {\n        handleSubmit: handleSubmit,\n        loading: loading,\n        showWarning: showWarning,\n        input: input,\n        setInput: setInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: response && isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n          onClose: closeModal,\n          response: response,\n          isOpen: isModalOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"60fh8Jq51IvGywjBcnUNAZV0tHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","Header","Footer","TheForm","Modal","AnimatePresence","jsxDEV","_jsxDEV","App","_s","input","setInput","response","setResponse","loading","setLoading","isModalOpen","setModalOpen","showWarning","setShowWarning","handleSubmit","e","preventDefault","analyzeSentiment","trim","closeModal","text","fetch","method","headers","body","JSON","stringify","data","json","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClose","isOpen","_c","$RefreshReg$"],"sources":["C:/Users/alfas/miss-tasks-app/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport TheForm from \"./components/TheForm\";\r\nimport Modal from \"./components/modal/Modal\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\n\r\nfunction App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [showWarning, setShowWarning] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    analyzeSentiment(input); // <♡ The sentiment analysis function\r\n    setLoading(true);\r\n\r\n    if (input.trim() === \"\") {\r\n      setShowWarning(true);\r\n    } else {\r\n      setModalOpen(true);\r\n      setInput(\"\");\r\n      setShowWarning(false);\r\n    }\r\n\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setInput(\"\");\r\n    setModalOpen(false);\r\n  };\r\n\r\n  /* <♡ API response /> */\r\n  const analyzeSentiment = async (text) => {\r\n    try {\r\n      const response = await fetch(\"/analyze-sentiment\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ text }), // <♡ Send user input as JSON\r\n      });\r\n      const data = await response.json(); // <♡ Parse the JSON response\r\n      // <♡ Handle the sentiment response from the backend />\r\n      setResponse(data.message);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setResponse(\"There was an error analyzing your sentiment.\");\r\n    } finally {\r\n      setLoading(false); // <♡ Stop loading after the response\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <NavBar />\r\n      <div className=\"fullPageContent\">\r\n      <Header />\r\n      <TheForm\r\n        handleSubmit={handleSubmit}\r\n        loading={loading}\r\n        showWarning={showWarning}\r\n        input={input}\r\n        setInput={setInput}\r\n      />\r\n      <AnimatePresence>\r\n      {response && isModalOpen && (\r\n        <Modal onClose={closeModal} response={response} isOpen={isModalOpen} />\r\n      )}\r\n      </AnimatePresence>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}